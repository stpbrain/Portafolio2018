/*
Script de creación de triggers asociados a secuencias, para base de datos del proyecto Hostal Doña Clarita
Autor: Carlos Poblete Araya (a.k.a Kyosuke Kasuga)
Fecha: 16-05-2018
*/

CREATE OR REPLACE TRIGGER TRG_RESERVAID BEFORE
    INSERT ON RESERVA
    FOR EACH ROW
    WHEN ( new.ID_RESERVA IS NULL )
BEGIN
    :new.ID_RESERVA := SEC_RESERVA.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_RESERVA_DETALLEID BEFORE
    INSERT ON RESERVA_DETALLE
    FOR EACH ROW
    WHEN ( new.ID_RESERVA_DETALLE IS NULL )
BEGIN
    :new.ID_RESERVA_DETALLE := SEC_RESERVA_DETALLE.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_HABITACIONID BEFORE
    INSERT ON HABITACION
    FOR EACH ROW
    WHEN ( new.ID_HABITACION IS NULL )
BEGIN
    :new.ID_HABITACION := SEC_HABITACION.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_TIPO_HABITACIONID BEFORE
    INSERT ON TIPO_HABITACION
    FOR EACH ROW
    WHEN ( new.ID_TIPO_HABITACION IS NULL )
BEGIN
    :new.ID_TIPO_HABITACION := SEC_TIPO_HABITACION.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_STATUS_HABITACIONID BEFORE
    INSERT ON STATUS_HABITACION
    FOR EACH ROW
    WHEN ( new.ID_STATUS_HABITACION IS NULL )
BEGIN
    :new.ID_STATUS_HABITACION := SEC_STATUS_HABITACION.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_PERSONAID BEFORE
    INSERT ON PERSONA
    FOR EACH ROW
    WHEN ( new.ID_PERSONA IS NULL )
BEGIN
    :new.ID_PERSONA := SEC_PERSONA.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_TIPO_PERSONAID BEFORE
    INSERT ON TIPO_PERSONA
    FOR EACH ROW
    WHEN ( new.ID_TIPO_PERSONA IS NULL )
BEGIN
    :new.ID_TIPO_PERSONA := SEC_TIPO_PERSONA.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_USUARIOID BEFORE
    INSERT ON USUARIO
    FOR EACH ROW
    WHEN ( new.ID_USUARIO IS NULL )
BEGIN
    :new.ID_USUARIO := SEC_USUARIO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_ROL_USUARIOID BEFORE
    INSERT ON ROL_USUARIO
    FOR EACH ROW
    WHEN ( new.ID_ROL_USUARIO IS NULL )
BEGIN
    :new.ID_ROL_USUARIO := SEC_ROL_USUARIO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_PROVEEDORID BEFORE
    INSERT ON PROVEEDOR
    FOR EACH ROW
    WHEN ( new.ID_PROVEEDOR IS NULL )
BEGIN
    :new.ID_PROVEEDOR := SEC_PROVEEDOR.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_RUBROID BEFORE
    INSERT ON RUBRO
    FOR EACH ROW
    WHEN ( new.ID_RUBRO IS NULL )
BEGIN
    :new.ID_RUBRO := SEC_RUBRO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_PRODUCTOID BEFORE
    INSERT ON PRODUCTO
    FOR EACH ROW
    WHEN ( new.ID_PRODUCTO IS NULL )
BEGIN
    :new.ID_PRODUCTO := SEC_PRODUCTO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_TIPO_PRODUCTOID BEFORE
    INSERT ON TIPO_PRODUCTO
    FOR EACH ROW
    WHEN ( new.ID_TIPO_PRODUCTO IS NULL )
BEGIN
    :new.ID_TIPO_PRODUCTO := SEC_TIPO_PRODUCTO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_TIPO_CAMBIOID BEFORE
    INSERT ON TIPO_CAMBIO
    FOR EACH ROW
    WHEN ( new.ID_TIPO_CAMBIO IS NULL )
BEGIN
    :new.ID_TIPO_CAMBIO := SEC_TIPO_CAMBIO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_MONEDAID BEFORE
    INSERT ON MONEDA
    FOR EACH ROW
    WHEN ( new.ID_MONEDA IS NULL )
BEGIN
    :new.ID_MONEDA := SEC_MONEDA.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_TIPO_CAMBIO_VALORID BEFORE
    INSERT ON TIPO_CAMBIO_VALOR
    FOR EACH ROW
    WHEN ( new.ID_TIPO_CAMBIO_VALOR IS NULL )
BEGIN
    :new.ID_TIPO_CAMBIO_VALOR := SEC_TIPO_CAMBIO_VALOR.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_PLATOID BEFORE
    INSERT ON PLATO
    FOR EACH ROW
    WHEN ( new.ID_PLATO IS NULL )
BEGIN
    :new.ID_PLATO := SEC_PLATO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_SERVICIO_COMEDORID BEFORE
    INSERT ON SERVICIO_COMEDOR
    FOR EACH ROW
    WHEN ( new.ID_SERVICIO_COMEDOR IS NULL )
BEGIN
    :new.ID_SERVICIO_COMEDOR := SEC_SERVICIO_COMEDOR.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_DIA_SEMANAID BEFORE
    INSERT ON DIA_SEMANA
    FOR EACH ROW
    WHEN ( new.ID_DIA_SEMANA IS NULL )
BEGIN
    :new.ID_DIA_SEMANA := SEC_DIA_SEMANA.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_ORDEN_PEDIDOID BEFORE
    INSERT ON ORDEN_PEDIDO
    FOR EACH ROW
    WHEN ( new.ID_ORDEN_PEDIDO IS NULL )
BEGIN
    :new.ID_ORDEN_PEDIDO := SEC_ORDEN_PEDIDO.nextval;
END;

CREATE OR REPLACE TRIGGER TRG_ORDEN_PEDIDO_DETID BEFORE
    INSERT ON ORDEN_PEDIDO_DET
    FOR EACH ROW
    WHEN ( new.ID_ORDEN_PEDIDO_DET IS NULL )
BEGIN
    :new.ID_ORDEN_PEDIDO_DET := SEC_ORDEN_PEDIDO_DET.nextval;
END;