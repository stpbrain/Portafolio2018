/*
DROP TABLE RESERVA CASCADE CONSTRAINTS;
DROP TABLE RESERVA_DETALLE CASCADE CONSTRAINTS;
DROP TABLE HABITACION CASCADE CONSTRAINTS;
DROP TABLE TIPO_HABITACION CASCADE CONSTRAINTS;
DROP TABLE STATUS_HABITACION CASCADE CONSTRAINTS;
DROP TABLE PERSONA CASCADE CONSTRAINTS;
DROP TABLE TIPO_PERSONA CASCADE CONSTRAINTS;
DROP TABLE USUARIO CASCADE CONSTRAINTS;
DROP TABLE ROL_USUARIO CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE RUBRO CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE TIPO_PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE TIPO_CAMBIO CASCADE CONSTRAINTS;
DROP TABLE MONEDA CASCADE CONSTRAINTS;
DROP TABLE TIPO_CAMBIO_VALOR CASCADE CONSTRAINTS;
DROP TABLE PLATO CASCADE CONSTRAINTS;
DROP TABLE SERVICIO_COMEDOR CASCADE CONSTRAINTS;
DROP TABLE MINUTA CASCADE CONSTRAINTS;
DROP TABLE DIA_SEMANA CASCADE CONSTRAINTS;
DROP TABLE ORDEN_PEDIDO CASCADE CONSTRAINTS;
DROP TABLE ORDEN_PEDIDO_DET CASCADE CONSTRAINTS;
*/
CREATE TABLE EMPRESA
( ID_EMPRESA  NUMBER(10,0) NOT NULL,
  NOMBRE      VARCHAR2(100 CHAR),
  RUT         VARCHAR2(10 CHAR),
  CONTRASEÃ‘A  VARCHAR2(500 CHAR),
  DIRECCION   VARCHAR2(100 CHAR),
  TELEFONO    VARCHAR2(30 CHAR),
  EMAIL       VARCHAR2(50 CHAR)
);

ALTER TABLE EMPRESA ADD CONSTRAINT EMPRESA_PK PRIMARY KEY (ID_EMPRESA);

CREATE TABLE HUESPED
( ID_HUESPED  NUMBER(10,0) NOT NULL,
  NOMBRE      VARCHAR2(50 CHAR),
  AP_PATERNO  VARCHAR2(50 CHAR),
  AP_MATERNO  VARCHAR2(50 CHAR),
  RUT         VARCHAR2(10 CHAR),
  FECHA_NAC   DATE,
  EMAIL       VARCHAR2(50 CHAR),
  SEXO        CHAR(1)
);

ALTER TABLE HUESPED ADD CONSTRAINT HUESPED_PK PRIMARY KEY (ID_HUESPED);

CREATE TABLE RESERVA
( ID_RESERVA      NUMBER(10,0) NOT NULL,
  ID_EMPRESA      NUMBER(10,0),
  FECHA_CHECKIN   DATE,
  FECHA_CHECKOUT  DATE,
  CANT_HUESPEDES  NUMBER(3,0)
);

ALTER TABLE RESERVA ADD CONSTRAINT RESERVA_PK PRIMARY KEY ( ID_RESERVA );

CREATE TABLE RESERVA_DETALLE
( ID_RESERVA_DETALLE  NUMBER(10,0) NOT NULL,
  ID_RESERVA          NUMBER(10,0),
  ID_HABITACION       NUMBER(10,0),
  ID_HUESPED          NUMBER(10,0),
  CONFIRMA_RESERVA    CHAR(1)
);

ALTER TABLE RESERVA_DETALLE ADD CONSTRAINT RESERVA_DETALLE_PK PRIMARY KEY ( ID_RESERVA_DETALLE );

CREATE TABLE HABITACION
( ID_HABITACION       NUMBER(10,0) NOT NULL,
  PRECIO              NUMBER(18,4),
  DISPONIBILIDAD      CHAR(1 CHAR),
  ID_TIPO_HABITACION  NUMBER(10,0),
  ID_STATUS_HABITACION  NUMBER(10,0)
);

ALTER TABLE HABITACION ADD CONSTRAINT HABITACION_PK PRIMARY KEY ( ID_HABITACION );

CREATE TABLE TIPO_HABITACION
( ID_TIPO_HABITACION  NUMBER(10,0) NOT NULL,
  DSC_TIPO_HABITACION VARCHAR2(50 CHAR) ,
  COD_TIPO_HABITACION VARCHAR2(10 CHAR)
);

ALTER TABLE TIPO_HABITACION ADD CONSTRAINT TIPO_HABITACION_PK PRIMARY KEY ( ID_TIPO_HABITACION );

CREATE TABLE STATUS_HABITACION
( ID_STATUS_HABITACION  NUMBER(10,0) NOT NULL,
  COD_STATUS_HABITACION CHAR(4 CHAR),
  DSC_STATUS_HABITACION VARCHAR2(50 CHAR)
);

ALTER TABLE STATUS_HABITACION ADD CONSTRAINT STATUS_HABITACION_PK PRIMARY KEY ( ID_STATUS_HABITACION );

CREATE TABLE EMPLEADO
( ID_EMPLEADO     NUMBER(10,0) NOT NULL,
  RUT_EMPLEADO    VARCHAR2(10 CHAR),
  NOMBRE          VARCHAR2(50 CHAR),
  APELLIDO        VARCHAR2(50 CHAR),
  TELEFONO        VARCHAR2(18 CHAR),
  PASS_EMPLEADO   VARCHAR2(500 CHAR),
  ID_ROL_USUARIO  NUMBER(10,0)
);

ALTER TABLE EMPLEADO ADD CONSTRAINT EMPLEADO_PK PRIMARY KEY ( ID_EMPLEADO );

CREATE TABLE ROL_USUARIO
( ID_ROL_USUARIO  NUMBER(10,0) NOT NULL,
  ROL_USUARIO     VARCHAR2(50 CHAR),
  DESCRIPCION     VARCHAR2(200 CHAR)
);

ALTER TABLE ROL_USUARIO ADD CONSTRAINT ROL_USUARIO_PK PRIMARY KEY ( ID_ROL_USUARIO );

CREATE TABLE PROVEEDOR
( ID_PROVEEDOR      NUMERIC(10,0) NOT NULL,
  RUT_PROVEEDOR     VARCHAR2(10 CHAR),
  ID_RUBRO          NUMERIC(10,0) NOT NULL,
  NOMBRE_PROVEEDOR  VARCHAR2(50 CHAR),
  DIRECCION_PROV    VARCHAR2(50 CHAR),
  TELEFONO_PROV     VARCHAR2(18 CHAR),
  NOMBRE_CONTACTO   VARCHAR2(100 CHAR),
  TELEFONO_CONTACTO VARCHAR2(20 CHAR),
  EMAIL_CONTACTO    VARCHAR2(50 CHAR)
);

ALTER TABLE PROVEEDOR ADD CONSTRAINT PROVEEDOR_PK PRIMARY KEY ( ID_PROVEEDOR );

CREATE TABLE RUBRO
( ID_RUBRO  NUMBER(10,0) NOT NULL,
  DSC_RUBRO VARCHAR2(100 CHAR)
);

ALTER TABLE RUBRO ADD CONSTRAINT RUBRO_PK PRIMARY KEY ( ID_RUBRO );

CREATE TABLE PRODUCTO
( ID_PRODUCTO         NUMBER(10,0) NOT NULL,
  DSC_PRODUCTO        VARCHAR2(100 CHAR),
  ID_TIPO_PRODUCTO    NUMBER(10,0),
  ID_PROVEEDOR        NUMBER(10,0),
  FECHA_VENCIMIENTO   DATE
);

ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_PK PRIMARY KEY ( ID_PRODUCTO );

CREATE TABLE TIPO_PRODUCTO
( ID_TIPO_PRODUCTO  NUMBER(10,0) NOT NULL,
  DSC_TIPO_PRODUCTO VARCHAR2(100 CHAR)
);

ALTER TABLE TIPO_PRODUCTO ADD CONSTRAINT TIPO_PRODUCTO_PK PRIMARY KEY ( ID_TIPO_PRODUCTO );

CREATE TABLE TIPO_CAMBIO
( ID_TIPO_CAMBIO      NUMBER(10,0) NOT NULL,
  ID_MONEDA_ORIGEN    NUMBER(10,0),
  DSC_MONEDA_ORIGEN   CHAR(3 CHAR),
  ID_MONEDA_DESTINO   NUMBER(10,0),
  DSC_MONEDA_DESTINO  CHAR(3 CHAR),
  DSC_TIPO_CAMBIO     VARCHAR2(30 CHAR),
  EST_TIPO_CAMBIO     CHAR(3 CHAR)
);

ALTER TABLE TIPO_CAMBIO ADD CONSTRAINT TIPO_CAMBIO_PK PRIMARY KEY ( ID_TIPO_CAMBIO );

CREATE TABLE MONEDA
( ID_MONEDA   NUMBER(10,0) NOT NULL,
  DSC_MONEDA  VARCHAR2(20 CHAR),
  COD_MONEDA  CHAR(3 CHAR)
);

ALTER TABLE MONEDA ADD CONSTRAINT MONEDA_PK PRIMARY KEY ( ID_MONEDA );

CREATE TABLE TIPO_CAMBIO_VALOR
( ID_TIPO_CAMBIO_VALOR  NUMBER(10,0) NOT NULL,
  ID_TIPO_CAMBIO        NUMBER(10,0),
  FECHA                 DATE,
  VALOR_TIPO_CAMBIO     NUMBER(10,4)
);

ALTER TABLE TIPO_CAMBIO_VALOR ADD CONSTRAINT TIPO_CAMBIO_VALOR_PK PRIMARY KEY ( ID_TIPO_CAMBIO_VALOR );

/*
CREATE TABLE INVENTARIO
( ID_INVENTARIO NUMBER(10,0) NOT NULL,
  ID_PRODUCTO   NUMBER(10,0),
  
);
*/
CREATE TABLE PLATO
( ID_PLATO  NUMBER(10,0) NOT NULL,
  DSC_PLATO VARCHAR2(50 CHAR),
  PRECIO    NUMBER(18,4)
);

ALTER TABLE PLATO ADD CONSTRAINT PLATO_PK PRIMARY KEY ( ID_PLATO );

CREATE TABLE SERVICIO_COMEDOR
( ID_SERVICIO_COMEDOR       NUMBER(10,0) NOT NULL,
  DSC_SERVICIO_COMEDOR      VARCHAR2(50),
  EST_SERVICIO_COMEDOR  CHAR(3 CHAR)
);

ALTER TABLE SERVICIO_COMEDOR ADD CONSTRAINT SERVICIO_COMEDOR_PK PRIMARY KEY ( ID_SERVICIO_COMEDOR );

CREATE TABLE MINUTA
( ID_PLATO            NUMBER(10,0) NOT NULL,
  ID_SERVICIO_COMEDOR NUMBER(10,0) NOT NULL,
  ID_DIA_SEMANA       NUMBER(10,0) NOT NULL
);

ALTER TABLE MINUTA ADD CONSTRAINT MINUTA_PK PRIMARY KEY ( ID_PLATO, ID_SERVICIO_COMEDOR, ID_DIA_SEMANA );

CREATE TABLE DIA_SEMANA
( ID_DIA_SEMANA NUMBER(10,0) NOT NULL,
  DSC_DIA_SEMANA  VARCHAR2(10 CHAR)
);

ALTER TABLE DIA_SEMANA ADD CONSTRAINT DIA_SEMANA_PK PRIMARY KEY ( ID_DIA_SEMANA );

CREATE TABLE ORDEN_PEDIDO
( ID_ORDEN_PEDIDO NUMBER(10,0) NOT NULL,
  ID_PROVEEDOR    NUMBER(10,0) NOT NULL,
  FECHA_SOLICITUD DATE,
  FECHA_RECEPCION DATE,
  ID_USUARIO_CREA_OP  NUMBER(10,0),
  OBSERVACIONES       VARCHAR2(500 CHAR)
);

ALTER TABLE ORDEN_PEDIDO ADD CONSTRAINT ORDEN_PEDIDO_PK PRIMARY KEY ( ID_ORDEN_PEDIDO );

CREATE TABLE ORDEN_PEDIDO_DET
( ID_ORDEN_PEDIDO_DET   NUMBER(10,0) NOT NULL,
  ID_ORDEN_PEDIDO       NUMBER(10,0),
  SEC_ORDEN_PEDIDO_DET  NUMBER(3,0),
  ID_PRODUCTO           NUMBER(10,0),
  CANTIDAD              NUMBER(10,0),
  PRECIO_UNITARIO       NUMBER(18,4),
  MONTO_TOTAL_OP        NUMBER(18,4)
);

ALTER TABLE ORDEN_PEDIDO_DET ADD CONSTRAINT ORDEN_PEDIDO_DET_PK PRIMARY KEY ( ID_ORDEN_PEDIDO_DET );



ALTER TABLE RESERVA
ADD CONSTRAINT RESERVA_EMPRESA_FK FOREIGN KEY ( ID_EMPRESA )
    REFERENCES EMPRESA ( ID_EMPRESA );

ALTER TABLE RESERVA_DETALLE
ADD CONSTRAINT RESERVADET_RESERVA_FK FOREIGN KEY ( ID_RESERVA )
    REFERENCES RESERVA ( ID_RESERVA );

ALTER TABLE RESERVA_DETALLE
ADD CONSTRAINT RESERVADET_HABITACION_FK FOREIGN KEY ( ID_HABITACION )
    REFERENCES HABITACION ( ID_HABITACION );

ALTER TABLE RESERVA_DETALLE
ADD CONSTRAINT RESERVADET_HUESPED_FK FOREIGN KEY ( ID_HUESPED )
    REFERENCES HUESPED ( ID_HUESPED );

ALTER TABLE HABITACION
ADD CONSTRAINT HABITACION_TIPOHABIT_FK FOREIGN KEY ( ID_TIPO_HABITACION )
    REFERENCES TIPO_HABITACION ( ID_TIPO_HABITACION );

ALTER TABLE HABITACION
ADD CONSTRAINT HABITACION_STATUSHABIT_FK FOREIGN KEY ( ID_STATUS_HABITACION )
    REFERENCES STATUS_HABITACION ( ID_STATUS_HABITACION );    

ALTER TABLE EMPLEADO
ADD CONSTRAINT EMPLEADO_ROLUSUARIO_FK FOREIGN KEY ( ID_ROL_USUARIO )
    REFERENCES ROL_USUARIO ( ID_ROL_USUARIO );    

ALTER TABLE PROVEEDOR
ADD CONSTRAINT PROVEEDOR_RUBRO_FK FOREIGN KEY ( ID_RUBRO )
    REFERENCES RUBRO ( ID_RUBRO );    

ALTER TABLE PRODUCTO
ADD CONSTRAINT PRODUCTO_TIPOPRODUCTO_FK FOREIGN KEY ( ID_TIPO_PRODUCTO )
    REFERENCES TIPO_PRODUCTO ( ID_TIPO_PRODUCTO );

ALTER TABLE PRODUCTO
ADD CONSTRAINT PRODUCTO_PROVEEDOR_FK FOREIGN KEY ( ID_PROVEEDOR )
    REFERENCES PROVEEDOR ( ID_PROVEEDOR );    

ALTER TABLE TIPO_CAMBIO
ADD CONSTRAINT TIPOCAMBIO_MONEDAORIGEN_FK FOREIGN KEY ( ID_MONEDA_ORIGEN )
    REFERENCES MONEDA ( ID_MONEDA );

ALTER TABLE TIPO_CAMBIO
ADD CONSTRAINT TIPOCAMBIO_MONEDADESTINO_FK FOREIGN KEY ( ID_MONEDA_DESTINO )
    REFERENCES MONEDA ( ID_MONEDA );    

ALTER TABLE TIPO_CAMBIO_VALOR
ADD CONSTRAINT TIPOCAMBIOVALOR_TIPOCAMBIO_FK FOREIGN KEY ( ID_TIPO_CAMBIO )
    REFERENCES TIPO_CAMBIO ( ID_TIPO_CAMBIO );                                    

ALTER TABLE MINUTA
ADD CONSTRAINT MINUTA_PLATO_FK FOREIGN KEY ( ID_PLATO )
    REFERENCES PLATO ( ID_PLATO );

ALTER TABLE MINUTA
ADD CONSTRAINT MINUTA_SERVICIOCOMEDOR_FK FOREIGN KEY ( ID_SERVICIO_COMEDOR )
    REFERENCES SERVICIO_COMEDOR ( ID_SERVICIO_COMEDOR );

ALTER TABLE MINUTA
ADD CONSTRAINT MINUTA_DIASEMANA_FK FOREIGN KEY ( ID_DIA_SEMANA )
    REFERENCES DIA_SEMANA ( ID_DIA_SEMANA );        

ALTER TABLE ORDEN_PEDIDO
ADD CONSTRAINT ORDENPEDIDO_PROVEEDOR_FK FOREIGN KEY ( ID_PROVEEDOR )
    REFERENCES PROVEEDOR ( ID_PROVEEDOR );

ALTER TABLE ORDEN_PEDIDO_DET
ADD CONSTRAINT ORDENPEDIDODET_ORDENPEDIDO_FK FOREIGN KEY ( ID_ORDEN_PEDIDO )
    REFERENCES ORDEN_PEDIDO ( ID_ORDEN_PEDIDO );

ALTER TABLE ORDEN_PEDIDO_DET
ADD CONSTRAINT ORDENPEDIDODET_PRODUCTO_FK FOREIGN KEY ( ID_PRODUCTO )
    REFERENCES PRODUCTO ( ID_PRODUCTO );    

    


CREATE SEQUENCE SEC_EMPRESA INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_HUESPED INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_RESERVA INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_RESERVA_DETALLE INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_HABITACION INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_TIPO_HABITACION INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_STATUS_HABITACION INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_EMPLEADO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_ROL_USUARIO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_PROVEEDOR INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_RUBRO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_PRODUCTO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_TIPO_PRODUCTO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_TIPO_CAMBIO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_MONEDA INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_TIPO_CAMBIO_VALOR INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_PLATO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_SERVICIO_COMEDOR INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_DIA_SEMANA INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_ORDEN_PEDIDO INCREMENT BY 1 START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE SEC_ORDEN_PEDIDO_DET INCREMENT BY 1 START WITH 1 NOCACHE ORDER;



CREATE OR REPLACE TRIGGER TRG_EMPRESAID BEFORE
    INSERT ON EMPRESA
    FOR EACH ROW
    WHEN ( new.ID_EMPRESA IS NULL )
BEGIN
    :new.ID_EMPRESA := SEC_EMPRESA.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_HUESPEDID BEFORE
    INSERT ON HUESPED
    FOR EACH ROW
    WHEN ( new.ID_HUESPED IS NULL )
BEGIN
    :new.ID_HUESPED := SEC_HUESPED.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_RESERVAID BEFORE
    INSERT ON RESERVA
    FOR EACH ROW
    WHEN ( new.ID_RESERVA IS NULL )
BEGIN
    :new.ID_RESERVA := SEC_RESERVA.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_RESERVA_DETALLEID BEFORE
    INSERT ON RESERVA_DETALLE
    FOR EACH ROW
    WHEN ( new.ID_RESERVA_DETALLE IS NULL )
BEGIN
    :new.ID_RESERVA_DETALLE := SEC_RESERVA_DETALLE.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_HABITACIONID BEFORE
    INSERT ON HABITACION
    FOR EACH ROW
    WHEN ( new.ID_HABITACION IS NULL )
BEGIN
    :new.ID_HABITACION := SEC_HABITACION.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_TIPO_HABITACIONID BEFORE
    INSERT ON TIPO_HABITACION
    FOR EACH ROW
    WHEN ( new.ID_TIPO_HABITACION IS NULL )
BEGIN
    :new.ID_TIPO_HABITACION := SEC_TIPO_HABITACION.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_STATUS_HABITACIONID BEFORE
    INSERT ON STATUS_HABITACION
    FOR EACH ROW
    WHEN ( new.ID_STATUS_HABITACION IS NULL )
BEGIN
    :new.ID_STATUS_HABITACION := SEC_STATUS_HABITACION.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_EMPLEADOID BEFORE
    INSERT ON EMPLEADO
    FOR EACH ROW
    WHEN ( new.ID_EMPLEADO IS NULL )
BEGIN
    :new.ID_EMPLEADO := SEC_EMPLEADO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_ROL_USUARIOID BEFORE
    INSERT ON ROL_USUARIO
    FOR EACH ROW
    WHEN ( new.ID_ROL_USUARIO IS NULL )
BEGIN
    :new.ID_ROL_USUARIO := SEC_ROL_USUARIO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_PROVEEDORID BEFORE
    INSERT ON PROVEEDOR
    FOR EACH ROW
    WHEN ( new.ID_PROVEEDOR IS NULL )
BEGIN
    :new.ID_PROVEEDOR := SEC_PROVEEDOR.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_RUBROID BEFORE
    INSERT ON RUBRO
    FOR EACH ROW
    WHEN ( new.ID_RUBRO IS NULL )
BEGIN
    :new.ID_RUBRO := SEC_RUBRO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_PRODUCTOID BEFORE
    INSERT ON PRODUCTO
    FOR EACH ROW
    WHEN ( new.ID_PRODUCTO IS NULL )
BEGIN
    :new.ID_PRODUCTO := SEC_PRODUCTO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_TIPO_PRODUCTOID BEFORE
    INSERT ON TIPO_PRODUCTO
    FOR EACH ROW
    WHEN ( new.ID_TIPO_PRODUCTO IS NULL )
BEGIN
    :new.ID_TIPO_PRODUCTO := SEC_TIPO_PRODUCTO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_TIPO_CAMBIOID BEFORE
    INSERT ON TIPO_CAMBIO
    FOR EACH ROW
    WHEN ( new.ID_TIPO_CAMBIO IS NULL )
BEGIN
    :new.ID_TIPO_CAMBIO := SEC_TIPO_CAMBIO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_MONEDAID BEFORE
    INSERT ON MONEDA
    FOR EACH ROW
    WHEN ( new.ID_MONEDA IS NULL )
BEGIN
    :new.ID_MONEDA := SEC_MONEDA.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_TIPO_CAMBIO_VALORID BEFORE
    INSERT ON TIPO_CAMBIO_VALOR
    FOR EACH ROW
    WHEN ( new.ID_TIPO_CAMBIO_VALOR IS NULL )
BEGIN
    :new.ID_TIPO_CAMBIO_VALOR := SEC_TIPO_CAMBIO_VALOR.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_PLATOID BEFORE
    INSERT ON PLATO
    FOR EACH ROW
    WHEN ( new.ID_PLATO IS NULL )
BEGIN
    :new.ID_PLATO := SEC_PLATO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_SERVICIO_COMEDORID BEFORE
    INSERT ON SERVICIO_COMEDOR
    FOR EACH ROW
    WHEN ( new.ID_SERVICIO_COMEDOR IS NULL )
BEGIN
    :new.ID_SERVICIO_COMEDOR := SEC_SERVICIO_COMEDOR.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_DIA_SEMANAID BEFORE
    INSERT ON DIA_SEMANA
    FOR EACH ROW
    WHEN ( new.ID_DIA_SEMANA IS NULL )
BEGIN
    :new.ID_DIA_SEMANA := SEC_DIA_SEMANA.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_ORDEN_PEDIDOID BEFORE
    INSERT ON ORDEN_PEDIDO
    FOR EACH ROW
    WHEN ( new.ID_ORDEN_PEDIDO IS NULL )
BEGIN
    :new.ID_ORDEN_PEDIDO := SEC_ORDEN_PEDIDO.nextval;
END;
/

CREATE OR REPLACE TRIGGER TRG_ORDEN_PEDIDO_DETID BEFORE
    INSERT ON ORDEN_PEDIDO_DET
    FOR EACH ROW
    WHEN ( new.ID_ORDEN_PEDIDO_DET IS NULL )
BEGIN
    :new.ID_ORDEN_PEDIDO_DET := SEC_ORDEN_PEDIDO_DET.nextval;
END;
/